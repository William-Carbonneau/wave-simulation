<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.Accordion?>
<?import javafx.scene.control.Label?>
<?import javafx.scene.control.TitledPane?>
<?import javafx.scene.layout.AnchorPane?>
<?import javafx.scene.layout.Pane?>
<?import javafx.scene.layout.VBox?>
<?import javafx.scene.text.Font?>
<?import javafx.scene.text.Text?>
<?import javafx.scene.text.TextFlow?>

<Pane fx:id="pane" maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="400.0" prefWidth="600.0" xmlns="http://javafx.com/javafx/20.0.1" xmlns:fx="http://javafx.com/fxml/1">
   <children>
      <VBox fx:id="vBox" cache="true" prefHeight="400.0" prefWidth="600.0">
         <children>
            <Label prefHeight="40.0" prefWidth="600.0" text="Help Navigating the Application">
               <font>
                  <Font size="14.0" />
               </font>
            </Label>
            <Accordion fx:id="accordion" prefWidth="601.0">
              <panes>
                <TitledPane fx:id="howUseAppTPane" animated="false" text="How to use the application?">
                  <content>
                    <AnchorPane fx:id="howToUseAppAnchPane" minHeight="0.0" minWidth="0.0" prefHeight="180.0" prefWidth="200.0">
                           <children>
                              <TextFlow fx:id="howToUseAppTxtFlw" prefHeight="200.0" prefWidth="600.0">
                                 <children>
                                    <Text fx:id="howUseAppTxt" strokeType="OUTSIDE" strokeWidth="0.0" text="Click on the screen to create new points to start the simulation from. Press &quot;play&quot; or &quot;render&quot; to run the simulation. Rendering will save image files into the root folder of the app in a new unique folder. Use the frme limit per simulation to modify the amount of frames rendred. Use the save settings feature to recreate an identical simulation starting point. Import settings to open a previously created simulation settings file. You can modify the frame speed for slower, heavier simualtions." wrappingWidth="594.9367179870605" />
                                 </children>
                              </TextFlow>
                           </children></AnchorPane>
                  </content>
                </TitledPane>
                <TitledPane animated="false" prefHeight="362.0" prefWidth="600.0" text="Functionalities">
                  <content>
                    <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="303.0" prefWidth="693.0">
                           <children>
                              <TextFlow fx:id="functTxtFlw" prefHeight="278.0" prefWidth="600.0">
                                 <children>
                                    <Text strokeType="OUTSIDE" strokeWidth="0.0" text="The application contains a wide range of functionalities.First and foremost, the application offers various simulations to choose from.After the simulation has been chosen, the options to set the scaling and the speed of the simulation is also offered.In the case of the &quot;Wave Simulation&quot;, the options to set the damping and the amplitude are also offered.The application is flexible enough to allow users to create origination points manually, by clicking on the screen, or by loading previously saved settings, by clicking on &quot;File&quot;-&gt;&quot;Load Settings&quot;.After the origination points have been set, the user can save them, and the settings in a new file, that is created by the application, or in an existing file, that is specified by the user.Once the origination points have been created, and once the application has started to play, the user can create new origination points by clicking on the screen.The application also offers the ability to render the simulation, which will save each frame of the simulation in a folder.To control the rendering, the user can specify the maximum number of frames he wants to be saved in the folder.He can also stop the rendering by himself.The simulation can be paused, and the &quot;Reset&quot; button can automatically clear the screen." textAlignment="JUSTIFY" wrappingWidth="449.8933868408203" />
                                 </children>
                              </TextFlow>
                           </children></AnchorPane>
                  </content>
                </TitledPane>
                <TitledPane animated="false" text="Save and Load Settings">
                  <content>
                    <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="180.0" prefWidth="200.0">
                           <children>
                              <TextFlow fx:id="saveLoadTxtFlw" prefHeight="200.0" prefWidth="600.0">
                                 <children>
                                    <Text strokeType="OUTSIDE" strokeWidth="0.0" text="The application offers the option to save the settings of a simulation in a csv file.The settings saved include: the origination points, the simulation type, the speed of the simulation, the scaling used, the amplitude and the damping, and the frame limit.When saving the simulation, the user can choose to either save in an existing file, or in a new file that can be created by the application.If the latter is chosen, a file name will be asked and folder in which the file will be saved will have to be specified by the user.The application also offers the possiblity to load the settings of a simulation from a csv file.To do so, the user has to select the csv file, which will be validated by the system.If the file is invalid, the application will ask the user to start again, and will give indications as to what is wrong with the file.To save the settings of a simulation, click on &quot;File&quot;-&gt;&quot;Save Settings&quot;.To load the settings of a simulation, click on &quot;File&quot;-&gt;&quot;Load Settings&quot;." wrappingWidth="586.3800296783447" />
                                 </children>
                              </TextFlow>
                           </children></AnchorPane>
                  </content>
                </TitledPane>
                  <TitledPane animated="false" text="Render Simulation">
                    <content>
                      <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="180.0" prefWidth="200.0">
                           <children>
                              <TextFlow fx:id="renderTxtFlw" prefHeight="200.0" prefWidth="600.0">
                                 <children>
                                    <Text strokeType="OUTSIDE" strokeWidth="0.0" text="The application is capable of rendering a simulation- that is, to record a simulation, frame by frame, and to store the simulation in a folder. That folder is automatically created by the application. The frames are saved in ppm format.To control the rendering, the user can specify the total number of frames, the frame limit, for a simulation.In order to start a simulation, the user can click on &quot;Render&quot;-&gt;&quot;Stop&quot;.Then, to stop a simulation, the user can simply click on &quot;Render&quot;-&gt;&quot;Stop&quot;" />
                                 </children>
                              </TextFlow>
                           </children>
                        </AnchorPane>
                    </content>
                  </TitledPane>
                  <TitledPane animated="false" text="Different Simulations">
                    <content>
                      <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="180.0" prefWidth="200.0">
                           <children>
                              <TextFlow prefHeight="200.0" prefWidth="600.0">
                                 <children>
                                    <Text strokeType="OUTSIDE" strokeWidth="0.0" text="The application offers a wide range of simulations. The first one a wave simulator. Clicking on the screen will create a wave at this exact location. The second simulation is Conway's Game of Life. It is a cellular automaton that consists of cells, created when pressing on the screen, that are either dead or elive, based on certain rules. The third one is called &quot;Rock-Paper-Scissors&quot;. Unlike Conway's Game of Life, the simulaion cannot be controlled by clicking on the screen, because the start of the simulation is completely arbitrary. The same goes for Forest Fire. The fifth simulation, Brian's Brain, is very similar to Conway's Game of Life. The origination points of Brain's Brain are entirely created by the user, by clicking on the screen." />
                                 </children>
                              </TextFlow>
                           </children>
                        </AnchorPane>
                    </content>
                  </TitledPane>
                  <TitledPane animated="false" text="Wave Simulation">
                    <content>
                      <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="180.0" prefWidth="200.0">
                           <children>
                              <TextFlow prefHeight="200.0" prefWidth="600.0">
                                 <children>
                                    <Text strokeType="OUTSIDE" strokeWidth="0.0" text="The wave simulator enables the user to create waves on the screen and to simulate its displacement over time. Each wave is created by the user by clicking on the screen. The amplitude and the speed of the simulation can be controlled using the sliders on the left. After clicking on the &quot;Play&quot; button waves can also be created by clicking on the screen." />
                                 </children>
                              </TextFlow>
                           </children>
                        </AnchorPane>
                    </content>
                  </TitledPane>
                  <TitledPane animated="false" text="Conway's Game of Life">
                    <content>
                      <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="180.0" prefWidth="200.0">
                           <children>
                              <TextFlow prefHeight="200.0" prefWidth="600.0">
                                 <children>
                                    <Text strokeType="OUTSIDE" strokeWidth="0.0" text="Conway's Game of Life, is one of the best examples of cellular automata. Each cell, created by the user by clicking on the screen, can be in one of two states: Dead or alive. A cell is alive if it had two or three neighbouring cells that were alive. If, at any instant, a cell has less than two neighbours that are live, or more than three, the cell dies in the next cycle of the simulation." />
                                 </children>
                              </TextFlow>
                           </children>
                        </AnchorPane>
                    </content>
                  </TitledPane>
                  <TitledPane animated="false" text="Rock-Paper-Scissors">
                    <content>
                      <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="180.0" prefWidth="200.0">
                           <children>
                              <TextFlow prefHeight="200.0" prefWidth="600.0">
                                 <children>
                                    <Text strokeType="OUTSIDE" strokeWidth="0.0" text="Text" />
                                 </children>
                              </TextFlow>
                           </children>
                        </AnchorPane>
                    </content>
                  </TitledPane>
                  <TitledPane animated="false" text="Brian's Brain">
                    <content>
                      <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="180.0" prefWidth="200.0">
                           <children>
                              <TextFlow prefHeight="200.0" prefWidth="600.0">
                                 <children>
                                    <Text strokeType="OUTSIDE" strokeWidth="0.0" text="Brian's Brain is very similar to Conway's Game of Life. Like Conway's Game of Life, a cell can be dead (white) or alive (black). However, a cell can also &quot;be dying&quot; (grey). By clicking on the screen, the user creates cells that are alive. A cell that is alive goes in a dying state, in the next frame, and a dying cell becomes dead, in the next frame. A cell can be turned alive only, and only if it is dead. To make a cell become alive, it needs to have two cells in its &quot;moore neighbourhood&quot; that are alive." />
                                 </children>
                              </TextFlow>
                           </children>
                        </AnchorPane>
                    </content>
                  </TitledPane>
                  <TitledPane animated="false" text="Forest Fire">
                    <content>
                      <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="180.0" prefWidth="200.0">
                           <children>
                              <TextFlow prefHeight="200.0" prefWidth="600.0">
                                 <children>
                                    <Text strokeType="OUTSIDE" strokeWidth="0.0" text="Forest Fire is a simulation based on cellular automata that stimulates fires in forests, and how these former propagate over time. The simulation consists of three types of cells: Alive, burning, and dead. A cell that is alive is green, one that is burning is red, and one that is burnt (dead) is black. When the simulation starts, the forest, the screen, only consists of trees that are alive. But, like natural forests, there is a probability that a tree will burn. This probability is distated by the user, using the slider to the left. Once a fire catches, arbitrarily, it propagates by burning all the trees in its moore neighbourhood. A tree that has a burning tree in its moore neighbourhood, will be burning in the next frame, and a burning tree will die (be burnt), in the next iteration of the animation. When a tree is burnt (black), there is a probability that it grows back again. This probability is controlled by the second slider.">
                                       <font>
                                          <Font size="10.0" />
                                       </font>
                                    </Text>
                                 </children>
                              </TextFlow>
                           </children>
                        </AnchorPane>
                    </content>
                  </TitledPane>
              </panes>
            </Accordion>
         </children>
      </VBox>
   </children>
</Pane>
